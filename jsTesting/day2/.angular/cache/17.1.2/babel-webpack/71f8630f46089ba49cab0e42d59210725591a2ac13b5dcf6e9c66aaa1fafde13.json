{"ast":null,"code":"import { HttpTestingController, provideHttpClientTesting } from \"@angular/common/http/testing\";\nimport { HeroServiceForLab } from \"./hero.lab.service\";\nimport { TestBed } from \"@angular/core/testing\";\nimport { firstValueFrom } from \"rxjs\";\ndescribe(\"3-hero service (http) integration testing:\", () => {\n  TestBed.configureTestingModule({\n    providers: [\n    // ... other test providers\n    provideHttpClientTesting()]\n  });\n  const httpTesting = TestBed.inject(HttpTestingController);\n  let heroService = TestBed.inject(HeroServiceForLab);\n  it(\"getHeroes function: send request and receive response successfully\", () => {\n    let reqPromise = firstValueFrom(heroService.getHeroes());\n  });\n  let testReq = httpTesting.expectOne(\"http://localhost:3000/heroes\");\n  expect(testReq.request.method).toBe(\"GET\");\n});\nit(\"updateHero function: send request and receive response successfully\", () => {});","map":{"version":3,"names":["HttpTestingController","provideHttpClientTesting","HeroServiceForLab","TestBed","firstValueFrom","describe","configureTestingModule","providers","httpTesting","inject","heroService","it","reqPromise","getHeroes","testReq","expectOne","expect","request","method","toBe"],"sources":["/home/master-x/ITI-workspace/jsTesting/day2/src/app/lab/hero service/hero.lab.service.integration.spec.ts"],"sourcesContent":["import { HttpTestingController, provideHttpClientTesting } from \"@angular/common/http/testing\";\r\nimport { HeroServiceForLab } from \"./hero.lab.service\";\r\nimport { TestBed } from \"@angular/core/testing\";\r\nimport { firstValueFrom } from \"rxjs\";\r\n\r\ndescribe(\"3-hero service (http) integration testing:\", () => {\r\n  TestBed.configureTestingModule({\r\n    providers: [\r\n      // ... other test providers\r\n      provideHttpClientTesting(),\r\n    ],\r\n  });\r\n  const httpTesting = TestBed.inject(HttpTestingController);\r\n  let heroService = TestBed.inject(HeroServiceForLab);\r\n  it(\"getHeroes function: send request and receive response successfully\", () => {\r\n    \r\n    let reqPromise = firstValueFrom(heroService.getHeroes();)\r\n    let testReq = httpTesting.expectOne(\"http://localhost:3000/heroes\");\r\n\r\n    expect(testReq.request.method).toBe(\"GET\");\r\n  });\r\n  it(\"updateHero function: send request and receive response successfully\", () => { })\r\n})"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,wBAAwB,QAAQ,8BAA8B;AAC9F,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,cAAc,QAAQ,MAAM;AAErCC,QAAQ,CAAC,4CAA4C,EAAE,MAAK;EAC1DF,OAAO,CAACG,sBAAsB,CAAC;IAC7BC,SAAS,EAAE;IACT;IACAN,wBAAwB,EAAE;GAE7B,CAAC;EACF,MAAMO,WAAW,GAAGL,OAAO,CAACM,MAAM,CAACT,qBAAqB,CAAC;EACzD,IAAIU,WAAW,GAAGP,OAAO,CAACM,MAAM,CAACP,iBAAiB,CAAC;EACnDS,EAAE,CAAC,oEAAoE,EAAE,MAAK;IAE5E,IAAIC,UAAU,GAAGR,cAAc,CAACM,WAAW,CAACG,SAAS,EAAE;EAAC,CAAC;EACzD,IAAIC,OAAO,GAAGN,WAAW,CAACO,SAAS,CAAC,8BAA8B,CAAC;EAEnEC,MAAM,CAACF,OAAO,CAACG,OAAO,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;AAC5C,CAAC,CAAC;AACFR,EAAE,CAAC,qEAAqE,EAAE,MAAK,CAAG,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}