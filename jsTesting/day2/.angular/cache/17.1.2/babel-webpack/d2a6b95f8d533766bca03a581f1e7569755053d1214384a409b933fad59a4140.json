{"ast":null,"code":"import { HttpTestingController, provideHttpClientTesting } from \"@angular/common/http/testing\";\nimport { HeroServiceForLab } from \"./hero.lab.service\";\nimport { TestBed } from \"@angular/core/testing\";\ndescribe(\"3-hero service (http) integration testing:\", () => {\n  beforeEach(() => {\n    let httpTesting, heroService;\n    TestBed.configureTestingModule({\n      providers: [\n      // ... other test providers\n      provideHttpClientTesting()]\n    });\n  });\n  httpTesting = TestBed.inject(HttpTestingController);\n  heroService = TestBed.inject(HeroServiceForLab);\n  it(\"getHeroes function: send request and receive response successfully\", () => {\n    heroService.getHeroes().subscribe();\n    const req = httpTesting.expectOne(\"http://localhost:3000/heroes\");\n    expect(req.request.method).toBe(\"GET\");\n  });\n  it(\"updateHero function: send request and receive response successfully\", () => {});\n});","map":{"version":3,"names":["HttpTestingController","provideHttpClientTesting","HeroServiceForLab","TestBed","describe","beforeEach","httpTesting","heroService","configureTestingModule","providers","inject","it","getHeroes","subscribe","req","expectOne","expect","request","method","toBe"],"sources":["/home/master-x/ITI-workspace/jsTesting/day2/src/app/lab/hero service/hero.lab.service.integration.spec.ts"],"sourcesContent":["import { HttpTestingController, provideHttpClientTesting } from \"@angular/common/http/testing\";\r\nimport { HeroServiceForLab } from \"./hero.lab.service\";\r\nimport { TestBed } from \"@angular/core/testing\";\r\n\r\ndescribe(\"3-hero service (http) integration testing:\", () => {\r\n  beforeEach( ()=>{\r\n    let httpTesting,heroService;\r\n    TestBed.configureTestingModule({\r\n      providers: [\r\n        // ... other test providers\r\n        provideHttpClientTesting(),\r\n      ],\r\n    });\r\n  });\r\n  httpTesting = TestBed.inject(HttpTestingController);\r\n  heroService = TestBed.inject(HeroServiceForLab);\r\n  it(\"getHeroes function: send request and receive response successfully\", () => {\r\n    \r\n    heroService.getHeroes().subscribe();\r\n    const req = httpTesting.expectOne(\"http://localhost:3000/heroes\");\r\n\r\n    expect(req.request.method).toBe(\"GET\");\r\n  });\r\n  it(\"updateHero function: send request and receive response successfully\", () => { })\r\n})"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,wBAAwB,QAAQ,8BAA8B;AAC9F,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,OAAO,QAAQ,uBAAuB;AAE/CC,QAAQ,CAAC,4CAA4C,EAAE,MAAK;EAC1DC,UAAU,CAAE,MAAI;IACd,IAAIC,WAAW,EAACC,WAAW;IAC3BJ,OAAO,CAACK,sBAAsB,CAAC;MAC7BC,SAAS,EAAE;MACT;MACAR,wBAAwB,EAAE;KAE7B,CAAC;EACJ,CAAC,CAAC;EACFK,WAAW,GAAGH,OAAO,CAACO,MAAM,CAACV,qBAAqB,CAAC;EACnDO,WAAW,GAAGJ,OAAO,CAACO,MAAM,CAACR,iBAAiB,CAAC;EAC/CS,EAAE,CAAC,oEAAoE,EAAE,MAAK;IAE5EJ,WAAW,CAACK,SAAS,EAAE,CAACC,SAAS,EAAE;IACnC,MAAMC,GAAG,GAAGR,WAAW,CAACS,SAAS,CAAC,8BAA8B,CAAC;IAEjEC,MAAM,CAACF,GAAG,CAACG,OAAO,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;EACxC,CAAC,CAAC;EACFR,EAAE,CAAC,qEAAqE,EAAE,MAAK,CAAG,CAAC,CAAC;AACtF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}