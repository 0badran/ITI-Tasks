{"ast":null,"code":"import { of } from \"rxjs\";\nimport { HeroesComponent } from \"./heroes.component\";\ndescribe(\"heroes component (class only)\", () => {\n  let component, heroServiceMock, heroesMock;\n  beforeEach(() => {\n    heroesMock = [{\n      id: 100,\n      name: \"superman\",\n      strength: 10\n    }, {\n      id: 101,\n      name: \"batman\",\n      strength: 15\n    }];\n    heroServiceMock = jasmine.createSpyObj([\"getHeroes\", \"addHero\", \"deleteHero\"]);\n    heroServiceMock.getHeroes.and.returnValue(of(heroesMock));\n    component = new HeroesComponent(heroServiceMock);\n  });\n  it('expect heroes[] to be empty', () => {\n    expect(component.heroes).toHaveSize(0);\n  });\n  it(\"expect after ngOninit() to set heroes[] and getHeroes from service to have been called\", () => {\n    component.ngOnInit();\n    expect(heroServiceMock.getHeroes).toHaveBeenCalled();\n    expect(component.heroes).toHaveSize(2);\n  });\n});","map":{"version":3,"names":["of","HeroesComponent","describe","component","heroServiceMock","heroesMock","beforeEach","id","name","strength","jasmine","createSpyObj","getHeroes","and","returnValue","it","expect","heroes","toHaveSize","ngOnInit","toHaveBeenCalled"],"sources":["/home/master-x/ITI-workspace/jsTesting/day2/src/app/heroes/heros.component.spec.ts"],"sourcesContent":["import { of } from \"rxjs\";\r\nimport { HeroesComponent } from \"./heroes.component\";\r\nimport { Hero } from \"../hero\";\r\nimport { HeroService } from \"../services/hero service/hero.service\";\r\n\r\n\r\ndescribe(\"heroes component (class only)\", () => {\r\n  let component:HeroesComponent,heroServiceMock:jasmine.SpyObj<HeroService>,heroesMock:Hero[]\r\n  beforeEach(()=>{\r\n    heroesMock=[\r\n      {id:100,name:\"superman\",strength:10},\r\n      {id:101,name:\"batman\",strength:15},\r\n    ]\r\n   heroServiceMock= jasmine.createSpyObj([\"getHeroes\",\"addHero\",\"deleteHero\"])\r\n   heroServiceMock.getHeroes.and.returnValue(of(heroesMock))\r\n\r\n    component= new HeroesComponent(heroServiceMock)\r\n  })\r\n    it('expect heroes[] to be empty', () => {\r\n        expect(component.heroes).toHaveSize(0)\r\n      });\r\n      it(\"expect after ngOninit() to set heroes[] and getHeroes from service to have been called\",()=>{\r\n        component.ngOnInit()\r\n        expect(heroServiceMock.getHeroes).toHaveBeenCalled()\r\n        expect(component.heroes).toHaveSize(2)\r\n      })\r\n})"],"mappings":"AAAA,SAASA,EAAE,QAAQ,MAAM;AACzB,SAASC,eAAe,QAAQ,oBAAoB;AAKpDC,QAAQ,CAAC,+BAA+B,EAAE,MAAK;EAC7C,IAAIC,SAAyB,EAACC,eAA2C,EAACC,UAAiB;EAC3FC,UAAU,CAAC,MAAI;IACbD,UAAU,GAAC,CACT;MAACE,EAAE,EAAC,GAAG;MAACC,IAAI,EAAC,UAAU;MAACC,QAAQ,EAAC;IAAE,CAAC,EACpC;MAACF,EAAE,EAAC,GAAG;MAACC,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAC;IAAE,CAAC,CACnC;IACFL,eAAe,GAAEM,OAAO,CAACC,YAAY,CAAC,CAAC,WAAW,EAAC,SAAS,EAAC,YAAY,CAAC,CAAC;IAC3EP,eAAe,CAACQ,SAAS,CAACC,GAAG,CAACC,WAAW,CAACd,EAAE,CAACK,UAAU,CAAC,CAAC;IAExDF,SAAS,GAAE,IAAIF,eAAe,CAACG,eAAe,CAAC;EACjD,CAAC,CAAC;EACAW,EAAE,CAAC,6BAA6B,EAAE,MAAK;IACnCC,MAAM,CAACb,SAAS,CAACc,MAAM,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC;EACxC,CAAC,CAAC;EACFH,EAAE,CAAC,wFAAwF,EAAC,MAAI;IAC9FZ,SAAS,CAACgB,QAAQ,EAAE;IACpBH,MAAM,CAACZ,eAAe,CAACQ,SAAS,CAAC,CAACQ,gBAAgB,EAAE;IACpDJ,MAAM,CAACb,SAAS,CAACc,MAAM,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC;EACxC,CAAC,CAAC;AACR,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}