{"ast":null,"code":"import { TestBed } from \"@angular/core/testing\";\nimport { CounterComponent } from \"./counter.component\";\nimport { By } from \"@angular/platform-browser\";\ndescribe('counter component: ', () => {\n  let fixture, component;\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      imports: [CounterComponent]\n    });\n    fixture = TestBed.createComponent(CounterComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('expect component to be created', () => {\n    expect(component).toBeTruthy();\n  });\n  it(\"expect p in template to have 0\", () => {\n    //access p\n    let p = fixture.nativeElement.querySelector(\"p\");\n    //check content\n    expect(p.textContent).toContain(\"0\");\n  });\n  it(\"expect after clicking inc btn to change counter in template\", () => {\n    //access btn\n    let btn = fixture.debugElement.query(By.css(\"#inc\"));\n    //click\n    btn.triggerEventHandler(\"click\");\n    btn.triggerEventHandler(\"click\");\n    btn.triggerEventHandler(\"click\");\n    //check counter in ts\n    expect(component.counter).toBe(3);\n    //check counter in template\n    fixture.detectChanges();\n    //access p\n    let p = fixture.nativeElement.querySelector(\"p\");\n    expect(p.textContent).toContain(\"3\");\n  });\n  it(\"expect after clicking dec btn to change counter in template\", () => {\n    let btn = fixture.debugElement.query(By.css(\"#dec\"));\n    btn.triggerEventHandler(\"click\");\n    btn.triggerEventHandler(\"click\");\n    expect(component.counter).toBe(-2);\n    fixture.detectChanges();\n    let p = fixture.nativeElement.querySelector(\"p\");\n    expect(p.textContent).toContain(\"-2\");\n  });\n});","map":{"version":3,"names":["TestBed","CounterComponent","By","describe","fixture","component","beforeEach","configureTestingModule","imports","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","p","nativeElement","querySelector","textContent","toContain","btn","debugElement","query","css","triggerEventHandler","counter","toBe"],"sources":["/home/master-x/ITI-workspace/jsTesting/day2/src/app/counter/counter.component.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed } from \"@angular/core/testing\";\r\nimport { CounterComponent } from \"./counter.component\";\r\nimport { By } from \"@angular/platform-browser\";\r\n\r\ndescribe('counter component: ', () => {\r\n  let fixture: ComponentFixture<CounterComponent>,component:CounterComponent\r\n  beforeEach(()=>{\r\n    TestBed.configureTestingModule({\r\n      imports:[CounterComponent]\r\n    })\r\n   fixture= TestBed.createComponent(CounterComponent)\r\n    component= fixture.componentInstance\r\n    fixture.detectChanges()\r\n  })\r\n  it('expect component to be created', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n  it(\"expect p in template to have 0\",()=>{\r\n    //access p\r\n    let p=fixture.nativeElement.querySelector(\"p\")\r\n    //check content\r\n    expect(p.textContent).toContain(\"0\")\r\n  })\r\n  it(\"expect after clicking inc btn to change counter in template\",()=>{\r\n\r\n    //access btn\r\n    let btn=fixture.debugElement.query(By.css(\"#inc\"))\r\n    //click\r\n    btn.triggerEventHandler(\"click\")\r\n    btn.triggerEventHandler(\"click\")\r\n    btn.triggerEventHandler(\"click\")\r\n    //check counter in ts\r\n    expect(component.counter).toBe(3)\r\n    //check counter in template\r\n    fixture.detectChanges()\r\n      //access p\r\n      let p=fixture.nativeElement.querySelector(\"p\")\r\n    expect(p.textContent).toContain(\"3\")\r\n  })\r\n  it(\"expect after clicking dec btn to change counter in template\",()=>{\r\n    let btn=fixture.debugElement.query(By.css(\"#dec\"))\r\n\r\n    btn.triggerEventHandler(\"click\")\r\n    btn.triggerEventHandler(\"click\")\r\n\r\n    expect(component.counter).toBe(-2)\r\n    fixture.detectChanges()\r\n    let p=fixture.nativeElement.querySelector(\"p\")\r\n    expect(p.textContent).toContain(\"-2\")\r\n  })\r\n});\r\n"],"mappings":"AAAA,SAA2BA,OAAO,QAAQ,uBAAuB;AACjE,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,EAAE,QAAQ,2BAA2B;AAE9CC,QAAQ,CAAC,qBAAqB,EAAE,MAAK;EACnC,IAAIC,OAA2C,EAACC,SAA0B;EAC1EC,UAAU,CAAC,MAAI;IACbN,OAAO,CAACO,sBAAsB,CAAC;MAC7BC,OAAO,EAAC,CAACP,gBAAgB;KAC1B,CAAC;IACHG,OAAO,GAAEJ,OAAO,CAACS,eAAe,CAACR,gBAAgB,CAAC;IACjDI,SAAS,GAAED,OAAO,CAACM,iBAAiB;IACpCN,OAAO,CAACO,aAAa,EAAE;EACzB,CAAC,CAAC;EACFC,EAAE,CAAC,gCAAgC,EAAE,MAAK;IACxCC,MAAM,CAACR,SAAS,CAAC,CAACS,UAAU,EAAE;EAChC,CAAC,CAAC;EACFF,EAAE,CAAC,gCAAgC,EAAC,MAAI;IACtC;IACA,IAAIG,CAAC,GAACX,OAAO,CAACY,aAAa,CAACC,aAAa,CAAC,GAAG,CAAC;IAC9C;IACAJ,MAAM,CAACE,CAAC,CAACG,WAAW,CAAC,CAACC,SAAS,CAAC,GAAG,CAAC;EACtC,CAAC,CAAC;EACFP,EAAE,CAAC,6DAA6D,EAAC,MAAI;IAEnE;IACA,IAAIQ,GAAG,GAAChB,OAAO,CAACiB,YAAY,CAACC,KAAK,CAACpB,EAAE,CAACqB,GAAG,CAAC,MAAM,CAAC,CAAC;IAClD;IACAH,GAAG,CAACI,mBAAmB,CAAC,OAAO,CAAC;IAChCJ,GAAG,CAACI,mBAAmB,CAAC,OAAO,CAAC;IAChCJ,GAAG,CAACI,mBAAmB,CAAC,OAAO,CAAC;IAChC;IACAX,MAAM,CAACR,SAAS,CAACoB,OAAO,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACjC;IACAtB,OAAO,CAACO,aAAa,EAAE;IACrB;IACA,IAAII,CAAC,GAACX,OAAO,CAACY,aAAa,CAACC,aAAa,CAAC,GAAG,CAAC;IAChDJ,MAAM,CAACE,CAAC,CAACG,WAAW,CAAC,CAACC,SAAS,CAAC,GAAG,CAAC;EACtC,CAAC,CAAC;EACFP,EAAE,CAAC,6DAA6D,EAAC,MAAI;IACnE,IAAIQ,GAAG,GAAChB,OAAO,CAACiB,YAAY,CAACC,KAAK,CAACpB,EAAE,CAACqB,GAAG,CAAC,MAAM,CAAC,CAAC;IAElDH,GAAG,CAACI,mBAAmB,CAAC,OAAO,CAAC;IAChCJ,GAAG,CAACI,mBAAmB,CAAC,OAAO,CAAC;IAEhCX,MAAM,CAACR,SAAS,CAACoB,OAAO,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClCtB,OAAO,CAACO,aAAa,EAAE;IACvB,IAAII,CAAC,GAACX,OAAO,CAACY,aAAa,CAACC,aAAa,CAAC,GAAG,CAAC;IAC9CJ,MAAM,CAACE,CAAC,CAACG,WAAW,CAAC,CAACC,SAAS,CAAC,IAAI,CAAC;EACvC,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}